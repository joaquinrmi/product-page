{"version":3,"sources":["components/gallery/gallery.tsx","components/button/button.tsx","pages/product/product.tsx","components/modal/modal.tsx","components/cart_product/cart_product.tsx","app/components/nav_bar/nav_bar.tsx","app/app.tsx","index.tsx"],"names":["moveGallery","moving","Gallery","props","currentPosition","useEffect","thumbnails","document","getElementById","id","position","a","cardContainer","classList","remove","add","Promise","resolve","setTimeout","buttonDelay","leftButton","rightButton","onclick","images","length","className","map","element","index","src","alt","thumbnail","onClick","ev","Button","icon","text","Product","useState","loaded","product","title","company","description","prize","discount","gallery","productData","setProductData","process","subtract","ammount","value","Number","innerText","String","productCount","addToCart","finalPrize","toFixed","role","Modal","modal","open","close","isOpened","contains","addEventListener","stopPropagation","closeModal","removeEventListener","children","CartProduct","removeProduct","substr","NavBar","items","i","firstChild","j","App","products","shoppingCart","setShoppingCart","state","newState","splice","app","cartModal","cartButton","width","getBoundingClientRect","rect","x","style","left","navigationSidebar","count","order","found","push","ReactDom"],"mappings":"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","file":"static/js/main.b2fa0314.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nimport \"./gallery.scss\";\r\n\r\nexport interface Props\r\n{\r\n    id: string;\r\n    images: Array<string>;\r\n    thumbnail: Array<string>;\r\n}\r\n\r\nlet moveGallery: (position: number) => Promise<void>;\r\n\r\nlet moving = false;\r\n\r\nconst Gallery: React.FunctionComponent<Props> = (props) =>\r\n{\r\n    let currentPosition = 0;\r\n\r\n    useEffect(() =>\r\n    {\r\n        const thumbnails = [\r\n            document.getElementById(`thumb-0-${props.id}`) as HTMLDivElement,\r\n            document.getElementById(`thumb-1-${props.id}`) as HTMLDivElement,\r\n            document.getElementById(`thumb-2-${props.id}`) as HTMLDivElement,\r\n            document.getElementById(`thumb-3-${props.id}`) as HTMLDivElement,\r\n        ];\r\n\r\n        moveGallery = async (position: number) =>\r\n        {\r\n            cardContainer.classList.remove(`pos${currentPosition}`);\r\n            cardContainer.classList.add(`pos${position}`);\r\n\r\n            thumbnails[currentPosition].classList.remove(\"active\");\r\n            currentPosition = position;\r\n            thumbnails[currentPosition].classList.add(\"active\");\r\n\r\n            return new Promise<void>(resolve =>\r\n            {\r\n                setTimeout(() =>\r\n                {\r\n                    buttonDelay = true;\r\n                    resolve();\r\n                },\r\n                500);\r\n            });\r\n        };\r\n\r\n        let buttonDelay = true;\r\n\r\n        const leftButton = document.getElementById(`left-${props.id}`) as HTMLDivElement;\r\n        const rightButton = document.getElementById(`right-${props.id}`) as HTMLDivElement;\r\n\r\n        const cardContainer = document.getElementById(`card-container-${props.id}`) as HTMLDivElement;\r\n\r\n        leftButton.onclick = () =>\r\n        {\r\n            if(currentPosition === 0)\r\n            {\r\n                return;\r\n            }\r\n\r\n            if(!buttonDelay)\r\n            {\r\n                return;\r\n            }\r\n            buttonDelay = false;\r\n\r\n            moveGallery(currentPosition - 1);\r\n        };\r\n\r\n        rightButton.onclick = () =>\r\n        {\r\n            if(currentPosition === props.images.length - 1)\r\n            {\r\n                return;\r\n            }\r\n\r\n            if(!buttonDelay)\r\n            {\r\n                return;\r\n            }\r\n            buttonDelay = false;\r\n\r\n            moveGallery(currentPosition + 1);\r\n        };\r\n    },\r\n    [\r\n        props.images\r\n    ]);\r\n\r\n    return <div id={props.id} className=\"gallery-container\">\r\n        <div className=\"image-slider\">\r\n            <div id={`card-container-${props.id}`} className=\"card-container\">\r\n                {\r\n                    props.images.map((element, index) =>\r\n                    {\r\n                        return <div key={`card-${index}`} id={`card-${index}-${props.id}`} className=\"slider-element\">\r\n                            <img src={element} alt=\"\" />\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <div className=\"left-control-container\">\r\n                <div id={`left-${props.id}`} className=\"control\">\r\n                    <i className=\"fi fi-rr-angle-small-left\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"right-control-container\">\r\n                <div id={`right-${props.id}`} className=\"control\">\r\n                    <i className=\"fi fi-rr-angle-small-right\"></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"thumbnails-container\">\r\n            {\r\n                props.thumbnail.map((element, index) =>\r\n                {\r\n                    return <div key={`thumb-${index}`} id={`thumb-${index}-${props.id}`} className={`thumbnail ${index === 0 ? \"active\" : \"\"}`} onClick={async (ev) =>\r\n                    {\r\n                        if(moving)\r\n                        {\r\n                            return;\r\n                        }\r\n                        moving = true;\r\n                        \r\n                        await moveGallery(index);\r\n                        moving = false;\r\n                    }}>\r\n                        <img src={element} alt=\"\" />\r\n                        <div className=\"white-screen\"></div>\r\n                    </div>;\r\n                })\r\n            }\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nexport default Gallery;","import React from \"react\";\r\n\r\nimport \"./button.scss\";\r\n\r\nexport interface Props\r\n{\r\n    id: string;\r\n    text: string;\r\n    icon?: any;\r\n}\r\n\r\nconst Button: React.FunctionComponent<Props> = (props) =>\r\n{\r\n    return <button id={props.id} className=\"standar-button\">\r\n        {props.icon ? <i className=\"fi fi-rr-shopping-cart\"></i> : null}\r\n        <span className=\"button-content\">\r\n            {props.text}\r\n        </span>\r\n    </button>;\r\n};\r\n\r\nexport default Button;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Gallery from \"../../components/gallery/\";\r\nimport Button from \"../../components/button/\";\r\n\r\nimport \"./product.scss\";\r\n\r\nexport interface Props\r\n{\r\n    id: string;\r\n    addToCart(order: OrderData): void;\r\n}\r\n\r\nconst Product: React.FunctionComponent<Props> = (props) =>\r\n{\r\n    const [ productData, setProductData ] = useState<ProductState>({\r\n        loaded: false,\r\n        product: {\r\n            id: -1,\r\n            title: \"\",\r\n            company: \"\",\r\n            description: \"\",\r\n            prize: 0,\r\n            discount: 0,\r\n            gallery: [],\r\n            thumbnail: []\r\n        }\r\n    });\r\n\r\n    useEffect(() =>\r\n    {\r\n        if(productData.loaded)\r\n        {\r\n            return;\r\n        }\r\n\r\n        setProductData({\r\n            loaded: true,\r\n            product: {\r\n                id: 0,\r\n                title: \"Fall Limited Edition Sneakers\",\r\n                company: \"SNEAKER COMPANY\",\r\n                description: \"These low-profile sneakers are you perfect casual wear companion. Featuring a durable rubber outer sole, they'll withstand everything the weather can offer.\",\r\n                prize: 250,\r\n                discount: 50,\r\n                gallery: [\r\n                    `${process.env.PUBLIC_URL}/img/image-product-1.jpg`,\r\n                    `${process.env.PUBLIC_URL}/img/image-product-2.jpg`,\r\n                    `${process.env.PUBLIC_URL}/img/image-product-3.jpg`,\r\n                    `${process.env.PUBLIC_URL}/img/image-product-4.jpg`\r\n                ],\r\n                thumbnail: [\r\n                    `${process.env.PUBLIC_URL}/img/image-product-1-thumbnail.jpg`,\r\n                    `${process.env.PUBLIC_URL}/img/image-product-2-thumbnail.jpg`,\r\n                    `${process.env.PUBLIC_URL}/img/image-product-3-thumbnail.jpg`,\r\n                    `${process.env.PUBLIC_URL}/img/image-product-4-thumbnail.jpg`\r\n                ]\r\n            }\r\n        });\r\n    },\r\n    [ productData.loaded ]);\r\n\r\n    useEffect(() =>\r\n    {\r\n        const subtract = document.getElementById(`subtract-${props.id}`) as HTMLSpanElement;\r\n        const add = document.getElementById(`add-${props.id}`) as HTMLSpanElement;\r\n        const ammount = document.getElementById(`ammount-${props.id}`) as HTMLSpanElement;\r\n\r\n        subtract.onclick = () =>\r\n        {\r\n            const value = Number(ammount.innerText);\r\n            if(value === 0)\r\n            {\r\n                return;\r\n            }\r\n\r\n            ammount.innerText = String(value - 1);\r\n        };\r\n\r\n        add.onclick = () =>\r\n        {\r\n            ammount.innerText = String(Number(ammount.innerText) + 1);\r\n        };\r\n\r\n        const addButton = document.getElementById(`add-cart-${props.id}`) as HTMLButtonElement;\r\n        addButton.onclick = () =>\r\n        {\r\n            const productCount = Number(ammount.innerText);\r\n\r\n            if(productCount === 0)\r\n            {\r\n                return;\r\n            }\r\n\r\n            ammount.innerText = \"0\";\r\n\r\n            props.addToCart({\r\n                id: productData.product.id,\r\n                title: productData.product.title,\r\n                ammount: productCount,\r\n                finalPrize: productData.product.prize - (productData.product.prize * productData.product.discount / 100),\r\n                thumbnail: productData.product.thumbnail[0],\r\n            });\r\n        };\r\n    });\r\n\r\n    return <div className=\"product\">\r\n        <section className=\"product-body\">\r\n            <section className=\"gallery\">\r\n                <Gallery id=\"product-gallery\" images={productData.product.gallery} thumbnail={productData.product.thumbnail} />\r\n            </section>\r\n\r\n            <section className=\"information\">\r\n                <div className=\"title-container\">\r\n                    <span className=\"company\">\r\n                        {productData.product.company}\r\n                    </span>\r\n\r\n                    <span className=\"title\">\r\n                        {productData.product.title}\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"description\">\r\n                    {productData.product.description}\r\n                </div>\r\n\r\n                <div className=\"prize-container\">\r\n                    <div className=\"final-prize\">\r\n                        <span className=\"prize\">\r\n                            ${(productData.product.prize - (productData.product.prize * productData.product.discount / 100)).toFixed(2)}\r\n                        </span>\r\n\r\n                        <div className=\"discount-container\">\r\n                            <span>\r\n                                {productData.product.discount}%\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <span className=\"actually-prize\">\r\n                        ${productData.product.prize.toFixed(2)}\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"buy-container\">\r\n                    <div className=\"order\">\r\n                        <span id={`subtract-${props.id}`} className=\"subtract\" role=\"button\">\r\n                            -\r\n                        </span>\r\n\r\n                        <span id={`ammount-${props.id}`} className=\"ammount\">\r\n                            0\r\n                        </span>\r\n\r\n                        <span id={`add-${props.id}`} className=\"add\" role=\"button\">\r\n                            +\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"buy-button-container\">\r\n                        <Button id={`add-cart-${props.id}`} text=\"Add to cart\" icon={<i className=\"fi fi-rr-shopping-cart\"></i>} />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </section>\r\n    </div>;\r\n};\r\n\r\nexport interface OrderData\r\n{\r\n    id: number;\r\n    title: string;\r\n    finalPrize: number;\r\n    ammount: number;\r\n    thumbnail: string;\r\n}\r\n\r\ninterface ProductInformation\r\n{\r\n    id: number;\r\n    title: string;\r\n    company: string;\r\n    description: string;\r\n    prize: number;\r\n    discount: number;\r\n    gallery: Array<string>;\r\n    thumbnail: Array<string>;\r\n}\r\n\r\ninterface ProductState\r\n{\r\n    loaded: boolean;\r\n    product: ProductInformation;\r\n}\r\n\r\nexport default Product;","import React, { useEffect } from \"react\";\r\n\r\nimport \"./modal.scss\";\r\n\r\nexport interface Props\r\n{\r\n    id: string;\r\n    className?: string;\r\n}\r\n\r\nexport interface ModalElement extends HTMLDivElement\r\n{\r\n    open(): void;\r\n    close(): void;\r\n    isOpened(): boolean;\r\n}\r\n\r\nconst Modal: React.FunctionComponent<Props> = (props) =>\r\n{\r\n    useEffect(() =>\r\n    {\r\n        const modal = document.getElementById(props.id) as ModalElement;\r\n\r\n        modal.open = () =>\r\n        {\r\n            modal.classList.remove(\"closed\");\r\n            modal.classList.add(\"opened\");\r\n        };\r\n\r\n        modal.close = () =>\r\n        {\r\n            modal.classList.remove(\"opened\");\r\n            modal.classList.add(\"closed\");\r\n        };\r\n\r\n        modal.isOpened = () =>\r\n        {\r\n            return modal.classList.contains(\"opened\");\r\n        };\r\n\r\n        if(props.className)\r\n        {\r\n            modal.classList.add(props.className);\r\n        }\r\n    },\r\n    [\r\n        props.id, props.className\r\n    ]);\r\n\r\n    useEffect(() =>\r\n    {\r\n        const modal = document.getElementById(props.id) as ModalElement;\r\n\r\n        modal.addEventListener(\"click\", (ev) =>\r\n        {\r\n            ev.stopPropagation();\r\n        });\r\n\r\n        const closeModal = () =>\r\n        {\r\n            modal.close();\r\n        };\r\n\r\n        document.addEventListener(\"click\", closeModal);\r\n\r\n        return () =>\r\n        {\r\n            document.removeEventListener(\"click\", closeModal);\r\n        };\r\n    },\r\n    []);\r\n\r\n    return <div id={props.id} className=\"modal closed\">\r\n        {props.children}\r\n    </div>;\r\n};\r\n\r\nexport default Modal;","import React, { useEffect } from \"react\";\r\n\r\nimport { OrderData } from \"../../pages/product\";\r\nimport Button from \"../button/\";\r\n\r\nimport \"./cart_product.scss\";\r\n\r\nexport interface Props\r\n{\r\n    id: string;\r\n    product: OrderData;\r\n    removeProduct(id: number): void;\r\n}\r\n\r\nconst CartProduct: React.FunctionComponent<Props> = (props) =>\r\n{\r\n    useEffect(() =>\r\n    {\r\n        const trash = document.getElementById(`trash-${props.id}`) as HTMLSpanElement;\r\n\r\n        trash.onclick = () =>\r\n        {\r\n            props.removeProduct(props.product.id);\r\n        };\r\n    });\r\n\r\n    return <div id={props.id} className=\"cart-product\">\r\n        <section className=\"info\">\r\n            <div className=\"thumbnail-container\">\r\n                <img src={props.product.thumbnail} alt=\"\" />\r\n            </div>\r\n\r\n            <div className=\"text\">\r\n                <span className=\"cart-title\">\r\n                    {props.product.title.substr(0, 22)}...\r\n                </span>\r\n\r\n                <span className=\"prize\">\r\n                    ${props.product.finalPrize.toFixed(2)} x {props.product.ammount} <span className=\"total\">\r\n                        ${(props.product.finalPrize * props.product.ammount).toFixed(2)}\r\n                    </span>\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"erase-container\">\r\n                <span id={`trash-${props.id}`}>\r\n                    <i className=\"fi fi-rr-trash\"></i>\r\n                </span>\r\n            </div>\r\n        </section>\r\n\r\n        <section className=\"cart-button\">\r\n            <Button id=\"checkout-button\" text=\"Checkout\" />\r\n        </section>\r\n    </div>;\r\n};\r\n\r\nexport default CartProduct;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./nav_bar.scss\";\r\n\r\nexport interface Props\r\n{\r\n    id: string;\r\n}\r\n\r\nconst NavBar: React.FunctionComponent<Props> = (props) =>\r\n{\r\n    useEffect(() =>\r\n    {\r\n        const items = [\r\n            document.getElementById(`collections-${props.id}`) as HTMLDivElement,\r\n            document.getElementById(`men-${props.id}`) as HTMLDivElement,\r\n            document.getElementById(`women-${props.id}`) as HTMLDivElement,\r\n            document.getElementById(`about-${props.id}`) as HTMLDivElement,\r\n            document.getElementById(`contact-${props.id}`) as HTMLDivElement,\r\n        ];\r\n\r\n        for(let i = 0; i < items.length; ++i)\r\n        {\r\n            (items[i].firstChild as HTMLSpanElement).onclick = () =>\r\n            {\r\n                for(let j = 0; j < items.length; ++j)\r\n                {\r\n                    if(j === i)\r\n                    {\r\n                        items[j].classList.add(\"active\");\r\n                    }\r\n                    else\r\n                    {\r\n                        items[j].classList.remove(\"active\");\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    },\r\n    [ props.id ]);\r\n\r\n    return <div id={props.id} className=\"nav-bar\">\r\n        <div id={`collections-${props.id}`} className=\"nav-item active\">\r\n            <span>Collections</span>\r\n        </div>\r\n\r\n        <div id={`men-${props.id}`} className=\"nav-item\">\r\n            <span>Men</span>\r\n        </div>\r\n\r\n        <div id={`women-${props.id}`} className=\"nav-item\">\r\n            <span>Women</span>\r\n        </div>\r\n\r\n        <div id={`about-${props.id}`} className=\"nav-item\">\r\n            <span>About</span>\r\n        </div>\r\n\r\n        <div id={`contact-${props.id}`} className=\"nav-item\">\r\n            <span>Contact</span>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nexport default NavBar;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Product, { OrderData } from \"../pages/product/\";\r\nimport Modal, { ModalElement } from \"../components/modal/\";\r\nimport CartProduct from \"../components/cart_product/\";\r\nimport NavBar from \"./components/nav_bar/\";\r\n\r\nimport \"./app.scss\";\r\n\r\nconst App: React.FunctionComponent = () =>\r\n{\r\n    const [ shoppingCart, setShoppingCart ] = useState<ShoppingCart>({\r\n        products: []\r\n    });\r\n\r\n    const removeProduct = (id: number) =>\r\n    {\r\n        setShoppingCart(state =>\r\n        {\r\n            const newState: ShoppingCart = {\r\n                products: state.products\r\n            };\r\n\r\n            let index = -1;\r\n            for(let i = 0; i < newState.products.length; ++i)\r\n            {\r\n                if(newState.products[i].id === id)\r\n                {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if(index !== -1)\r\n            {\r\n                newState.products.splice(index, 1);\r\n            }\r\n\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    useEffect(() =>\r\n    {\r\n        const app = document.getElementById(\"app\") as HTMLDivElement;\r\n\r\n        const cartModal = document.getElementById(\"cart-modal\") as ModalElement;\r\n\r\n        const cartButton = document.getElementById(\"open-cart-button\") as HTMLDivElement;\r\n        cartButton.onclick = (ev) =>\r\n        {\r\n            const width = app.getBoundingClientRect().width;\r\n            const rect = cartButton.getBoundingClientRect();\r\n\r\n            let position = rect.x + (rect.width / 2) - (375 / 2);\r\n            if(position + 375 > width)\r\n            {\r\n                position -= (position + 375 - width);\r\n            }\r\n\r\n            ev.stopPropagation();\r\n            \r\n            if(cartModal.isOpened())\r\n            {\r\n                cartModal.close();\r\n            }\r\n            else\r\n            {\r\n                cartModal.open();\r\n                cartModal.style.left = `${position}px`;\r\n            }\r\n        };\r\n    });\r\n\r\n    useEffect(() =>\r\n    {\r\n        const navigationSidebar = document.getElementById(\"navigation-sidebar\") as HTMLDivElement;\r\n\r\n        const openNavigation = document.getElementById(\"open-navigation\") as HTMLDivElement;\r\n        openNavigation.onclick = () =>\r\n        {\r\n            navigationSidebar.classList.remove(\"closed\");\r\n            navigationSidebar.classList.add(\"opened\");\r\n        };\r\n\r\n        const closeNavigation = document.getElementById(\"close-navigation\") as HTMLDivElement;\r\n        closeNavigation.onclick = () =>\r\n        {\r\n            navigationSidebar.classList.remove(\"opened\");\r\n            navigationSidebar.classList.add(\"closing\");\r\n            setTimeout(() =>\r\n            {\r\n                navigationSidebar.classList.remove(\"closing\");\r\n                navigationSidebar.classList.add(\"closed\");\r\n            },\r\n            250);\r\n        };\r\n    },\r\n    []);\r\n\r\n    return <div className=\"app\">\r\n        <header className=\"main\">\r\n            <div className=\"content\">\r\n                <div id=\"open-navigation\" className=\"navigation item-button\" role=\"button\">\r\n                    <i className=\"fi fi-rr-menu-burger\"></i>\r\n                </div>\r\n\r\n                <span className=\"title\">\r\n                    sneakers\r\n                </span>\r\n\r\n                <NavBar id=\"nav-bar\" />\r\n\r\n                <div className=\"cart-container\">\r\n                    <div id=\"open-cart-button\" className=\"cart item-button\">\r\n                        <i className=\"fi fi-rr-shopping-cart\"></i>\r\n                        {shoppingCart.products.length > 0 ?\r\n                            <span className=\"cart-count\">{(() => {\r\n                                let count = 0;\r\n                                for(let i = 0; i < shoppingCart.products.length; ++i)\r\n                                {\r\n                                    count += shoppingCart.products[i].ammount;\r\n                                }\r\n                                return count;\r\n                            })()}</span>\r\n                            : null\r\n                        }\r\n                    </div>\r\n\r\n                    <Modal id=\"cart-modal\" className=\"shopping-cart\">\r\n                        <section className=\"shopping-cart-body\">\r\n                            <header className=\"cart-header\">\r\n                                Cart\r\n                            </header>\r\n\r\n                            <section className=\"cart-content\">\r\n                                {shoppingCart.products.length === 0 ?\r\n                                    <div className=\"cart-empty\">\r\n                                        <span>\r\n                                            Your cart is empty.\r\n                                        </span>\r\n                                    </div>\r\n                                    \r\n                                    :\r\n                                \r\n                                    shoppingCart.products.map((product, index) =>\r\n                                    {\r\n                                        return <CartProduct key={`sp-${index}`} id={`sp-${index}`} product={product} removeProduct={removeProduct} />\r\n                                    })\r\n                                }\r\n                            </section>\r\n                        </section>\r\n                    </Modal>\r\n                </div>\r\n\r\n                <div className=\"profile-container\">\r\n                    <div className=\"profile item-button\">\r\n                        <i className=\"fi fi-rr-user\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n\r\n        <Product id=\"sneakers\" addToCart={(order: OrderData) =>\r\n        {\r\n            setShoppingCart(state =>\r\n            {\r\n                const newState: ShoppingCart = {\r\n                    products: [ ...state.products ]\r\n                };\r\n\r\n                let found = false;\r\n                for(let i = 0; i < newState.products.length; ++i)\r\n                {\r\n                    if(newState.products[i].id === order.id)\r\n                    {\r\n                        newState.products[i].ammount += order.ammount;\r\n                        found = true;\r\n                    }\r\n                }\r\n\r\n                if(!found)\r\n                {\r\n                    newState.products.push(order);\r\n                }\r\n\r\n                return newState;\r\n            });\r\n        }} />\r\n\r\n        <div id=\"navigation-sidebar\" className=\"navigation-sidebar closed\">\r\n            <div className=\"navigation-body\">\r\n                <header className=\"navigation\">\r\n                    <div id=\"close-navigation\" className=\"close-navigation\" role=\"button\">\r\n                        <i className=\"fi fi-rr-cross\"></i>\r\n                    </div>\r\n                </header>\r\n\r\n                <section className=\"navigation\">\r\n                    <span>Collections</span>\r\n                    <span>Men</span>\r\n                    <span>Women</span>\r\n                    <span>About</span>\r\n                    <span>Contact</span>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\ninterface ShoppingCart\r\n{\r\n    products: Array<OrderData>;\r\n}\r\n\r\nexport default App;","import * as ReactDom from \"react-dom\";\r\n\r\nimport App from \"./app/\";\r\n\r\nReactDom.render(<App />, document.getElementById(\"app\"));"],"sourceRoot":""}