{"version":3,"sources":["components/modal/modal.tsx","components/gallery/gallery.tsx","components/button/button.tsx","pages/product/product.tsx","components/cart_product/cart_product.tsx","app/components/nav_bar/nav_bar.tsx","app/app.tsx","index.tsx"],"names":["ModalStatus","Gallery","props","useState","currentPosition","setCurrentPosition","id","className","images","map","element","index","src","alt","onClick","position","length","thumbnail","ev","a","Button","icon","text","Product","loaded","product","title","company","description","prize","discount","gallery","productData","setProductData","useEffect","process","subtract","document","getElementById","add","ammount","onclick","value","Number","innerText","String","productCount","addToCart","finalPrize","toFixed","role","Modal","modal","closeModal","target","classList","remove","Closed","Open","Closing","setTimeout","closeRequest","closeAnimationTime","addEventListener","removeEventListener","status","style","undefined","top","left","children","CartProduct","removeProduct","substr","NavBar","items","i","firstChild","j","App","cartModalStatus","setCartModalStatus","cartModalPosition","setCartModalPosition","navigationStatus","setNavigationStatus","products","shoppingCart","setShoppingCart","state","newState","splice","app","cartButton","stopPropagation","width","getBoundingClientRect","rect","x","count","order","found","push","ReactDom"],"mappings":"yQAgBYA,E,kEC6EGC,EAlFiC,SAACC,GAE7C,MAAgDC,mBAAiB,GAAjE,mBAAQC,EAAR,KAAyBC,EAAzB,KAEA,OAAO,sBAAKC,GAAIJ,EAAMI,GAAIC,UAAU,oBAA7B,UACH,sBAAKA,UAAU,eAAf,UACI,qBAAKD,GAAE,yBAAoBJ,EAAMI,IAAMC,UAAS,4BAAuBH,GAAvE,SAEQF,EAAMM,OAAOC,KAAI,SAACC,EAASC,GAEvB,OAAO,qBAA2BL,GAAE,eAAUK,EAAV,YAAmBT,EAAMI,IAAMC,UAAU,iBAAtE,SACH,qBAAKK,IAAKF,EAASG,IAAI,MADpB,eAAkBF,SAOrC,qBAAKJ,UAAU,yBAAf,SACI,qBACID,GAAE,eAAUJ,EAAMI,IAClBC,UAAU,UACVO,QAAS,WAELT,GAAmB,SAACU,GAEhB,OAAgB,IAAbA,EAEQA,EAGJA,EAAW,MAZ9B,SAgBI,mBAAGR,UAAU,kCAIrB,qBAAKA,UAAU,0BAAf,SACI,qBACID,GAAE,gBAAWJ,EAAMI,IACnBC,UAAU,UACVO,QAAS,WAELT,GAAmB,SAACU,GAEhB,OAAGA,IAAab,EAAMM,OAAOQ,OAAS,EAE3BD,EAGJA,EAAW,MAZ9B,SAgBI,mBAAGR,UAAU,sCAKzB,qBAAKA,UAAU,uBAAf,SAEQL,EAAMe,UAAUR,KAAI,SAACC,EAASC,GAE1B,OAAO,sBAEHL,GAAE,gBAAWK,EAAX,YAAoBT,EAAMI,IAC5BC,UAAS,oBAAeI,IAAUP,EAAkB,SAAW,IAC/DU,QAAO,uCAAE,WAAOI,GAAP,SAAAC,EAAA,sDAELd,EAAmBM,GAFd,2CAAF,sDAJJ,UASH,qBAAKC,IAAKF,EAASG,IAAI,KACvB,qBAAKN,UAAU,mBAVZ,gBACWI,aCvDvBS,G,MAVgC,SAAClB,GAE5C,OAAO,yBAAQI,GAAIJ,EAAMI,GAAIC,UAAU,iBAAhC,UACFL,EAAMmB,KAAO,mBAAGd,UAAU,2BAAgC,KAC3D,sBAAMA,UAAU,iBAAhB,SACKL,EAAMoB,YCoLJC,G,MAvLiC,SAACrB,GAE7C,MAAwCC,mBAAuB,CAC3DqB,QAAQ,EACRC,QAAS,CACLnB,IAAK,EACLoB,MAAO,GACPC,QAAS,GACTC,YAAa,GACbC,MAAO,EACPC,SAAU,EACVC,QAAS,GACTd,UAAW,MAVnB,mBAAQe,EAAR,KAAqBC,EAArB,KA2FA,OA7EAC,qBAAU,WAEHF,EAAYR,QAKfS,EAAe,CACXT,QAAQ,EACRC,QAAS,CACLnB,GAAI,EACJoB,MAAO,gCACPC,QAAS,kBACTC,YAAa,+JACbC,MAAO,IACPC,SAAU,GACVC,QAAS,CAAC,GAAD,OACFI,gBADE,sCAEFA,gBAFE,sCAGFA,gBAHE,sCAIFA,gBAJE,6BAMTlB,UAAW,CAAC,GAAD,OACJkB,gBADI,gDAEJA,gBAFI,gDAGJA,gBAHI,gDAIJA,gBAJI,4CASvB,CAAEH,EAAYR,SAEdU,qBAAU,WAEN,IAAME,EAAWC,SAASC,eAAT,mBAAoCpC,EAAMI,KACrDiC,EAAMF,SAASC,eAAT,cAA+BpC,EAAMI,KAC3CkC,EAAUH,SAASC,eAAT,kBAAmCpC,EAAMI,KAEzD8B,EAASK,QAAU,WAEf,IAAMC,EAAQC,OAAOH,EAAQI,WAChB,IAAVF,IAKHF,EAAQI,UAAYC,OAAOH,EAAQ,KAGvCH,EAAIE,QAAU,WAEVD,EAAQI,UAAYC,OAAOF,OAAOH,EAAQI,WAAa,IAGzCP,SAASC,eAAT,mBAAoCpC,EAAMI,KAClDmC,QAAU,WAEhB,IAAMK,EAAeH,OAAOH,EAAQI,WAEhB,IAAjBE,IAKHN,EAAQI,UAAY,IAEpB1C,EAAM6C,UAAU,CACZzC,GAAI0B,EAAYP,QAAQnB,GACxBoB,MAAOM,EAAYP,QAAQC,MAC3Bc,QAASM,EACTE,WAAYhB,EAAYP,QAAQI,MAASG,EAAYP,QAAQI,MAAQG,EAAYP,QAAQK,SAAW,IACpGb,UAAWe,EAAYP,QAAQR,UAAU,UAK9C,qBAAKV,UAAU,UAAf,SACH,0BAASA,UAAU,eAAnB,UACI,yBAASA,UAAU,UAAnB,SACI,cAAC,EAAD,CAASD,GAAG,kBAAkBE,OAAQwB,EAAYP,QAAQM,QAASd,UAAWe,EAAYP,QAAQR,cAGtG,0BAASV,UAAU,cAAnB,UACI,sBAAKA,UAAU,kBAAf,UACI,sBAAMA,UAAU,UAAhB,SACKyB,EAAYP,QAAQE,UAGzB,sBAAMpB,UAAU,QAAhB,SACKyB,EAAYP,QAAQC,WAI7B,qBAAKnB,UAAU,cAAf,SACKyB,EAAYP,QAAQG,cAGzB,sBAAKrB,UAAU,kBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,uBAAMA,UAAU,QAAhB,eACOyB,EAAYP,QAAQI,MAASG,EAAYP,QAAQI,MAAQG,EAAYP,QAAQK,SAAW,KAAMmB,QAAQ,MAG7G,qBAAK1C,UAAU,qBAAf,SACI,iCACKyB,EAAYP,QAAQK,SADzB,YAMR,uBAAMvB,UAAU,iBAAhB,cACMyB,EAAYP,QAAQI,MAAMoB,QAAQ,SAI5C,sBAAK1C,UAAU,gBAAf,UACI,sBAAKA,UAAU,QAAf,UACI,sBAAMD,GAAE,mBAAcJ,EAAMI,IAAMC,UAAU,WAAW2C,KAAK,SAA5D,eAIA,sBAAM5C,GAAE,kBAAaJ,EAAMI,IAAMC,UAAU,UAA3C,eAIA,sBAAMD,GAAE,cAASJ,EAAMI,IAAMC,UAAU,MAAM2C,KAAK,SAAlD,kBAKJ,qBAAK3C,UAAU,uBAAf,SACI,cAAC,EAAD,CAAQD,GAAE,mBAAcJ,EAAMI,IAAMgB,KAAK,cAAcD,KAAM,mBAAGd,UAAU,4C,gBHjJtFP,K,gBAAAA,E,kBAAAA,E,aAAAA,M,KAOZ,IAmFemD,EAnF+B,SAACjD,GAE3CgC,qBAAU,WAEN,IAAMkB,EAAQf,SAASC,eAAepC,EAAMI,IAE5C,GAAa,OAAV8C,EAAH,CAKA,IAAMC,EAAa,SAACnC,GAEbA,EAAGoC,SAAWF,IAKjBA,EAAMG,UAAUC,OAAOxD,EAAYyD,QACnCL,EAAMG,UAAUC,OAAOxD,EAAY0D,MACnCN,EAAMG,UAAUhB,IAAIvC,EAAY2D,SAEhCC,YACI,WAEI1D,EAAM2D,iBAEV3D,EAAM4D,oBAAsB,KAMpC,OAFAV,EAAMW,iBAAiB,QAASV,GAEzB,WAEHD,EAAMY,oBAAoB,QAASX,QAI3CnB,qBAAU,WAEN,GAAGhC,EAAM+D,SAAWjE,EAAY2D,QAChC,CACI,IAAMP,EAAQf,SAASC,eAAepC,EAAMI,IAE5C,GAAa,OAAV8C,EAEC,OAGJA,EAAMG,UAAUC,OAAOxD,EAAYyD,QACnCL,EAAMG,UAAUC,OAAOxD,EAAY0D,MACnCN,EAAMG,UAAUhB,IAAIvC,EAAY2D,SAEhCC,YACI,WAEI1D,EAAM2D,iBAEV3D,EAAM4D,oBAAsB,OAKxC,IAAII,EAA6B,GAUjC,YATiBC,IAAdjE,EAAMkE,MAELF,EAAME,IAAN,UAAelE,EAAMkE,IAArB,YAEcD,IAAfjE,EAAMmE,OAELH,EAAMG,KAAN,UAAgBnE,EAAMmE,KAAtB,OAGG,qBACH/D,GAAIJ,EAAMI,GACVC,UAAS,gBAAWL,EAAM+D,OAAjB,YAA2B/D,EAAMK,WAC1C2D,MAAOA,EAHJ,SAKFhE,EAAMoE,YI7CAC,G,MA3CqC,SAACrE,GAYjD,OAVAgC,qBAAU,WAEQG,SAASC,eAAT,gBAAiCpC,EAAMI,KAE/CmC,QAAU,WAEZvC,EAAMsE,cAActE,EAAMuB,QAAQnB,QAInC,sBAAKA,GAAIJ,EAAMI,GAAIC,UAAU,eAA7B,UACH,0BAASA,UAAU,OAAnB,UACI,qBAAKA,UAAU,sBAAf,SACI,qBAAKK,IAAKV,EAAMuB,QAAQR,UAAWJ,IAAI,OAG3C,sBAAKN,UAAU,OAAf,UACI,uBAAMA,UAAU,aAAhB,UACKL,EAAMuB,QAAQC,MAAM+C,OAAO,EAAG,IADnC,SAIA,uBAAMlE,UAAU,QAAhB,cACML,EAAMuB,QAAQuB,WAAWC,QAAQ,GADvC,MAC8C/C,EAAMuB,QAAQe,QAD5D,IACqE,uBAAMjC,UAAU,QAAhB,eAC1DL,EAAMuB,QAAQuB,WAAa9C,EAAMuB,QAAQe,SAASS,QAAQ,YAKzE,qBAAK1C,UAAU,kBAAf,SACI,sBAAMD,GAAE,gBAAWJ,EAAMI,IAAzB,SACI,mBAAGC,UAAU,0BAKzB,yBAASA,UAAU,cAAnB,SACI,cAAC,EAAD,CAAQD,GAAG,kBAAkBgB,KAAK,oBCY/BoD,G,MAvDgC,SAACxE,GAgC5C,OA9BAgC,qBAAU,WAUN,IARA,IAAMyC,EAAQ,CACVtC,SAASC,eAAT,sBAAuCpC,EAAMI,KAC7C+B,SAASC,eAAT,cAA+BpC,EAAMI,KACrC+B,SAASC,eAAT,gBAAiCpC,EAAMI,KACvC+B,SAASC,eAAT,gBAAiCpC,EAAMI,KACvC+B,SAASC,eAAT,kBAAmCpC,EAAMI,MANjD,WASYsE,GAEHD,EAAMC,GAAGC,WAA+BpC,QAAU,WAE/C,IAAI,IAAIqC,EAAI,EAAGA,EAAIH,EAAM3D,SAAU8D,EAE5BA,IAAMF,EAELD,EAAMG,GAAGvB,UAAUhB,IAAI,UAIvBoC,EAAMG,GAAGvB,UAAUC,OAAO,YAZlCoB,EAAI,EAAGA,EAAID,EAAM3D,SAAU4D,EAClC,EADOA,KAkBZ,CAAE1E,EAAMI,KAED,sBAAKA,GAAIJ,EAAMI,GAAIC,UAAU,UAA7B,UACH,qBAAKD,GAAE,sBAAiBJ,EAAMI,IAAMC,UAAU,kBAA9C,SACI,iDAGJ,qBAAKD,GAAE,cAASJ,EAAMI,IAAMC,UAAU,WAAtC,SACI,yCAGJ,qBAAKD,GAAE,gBAAWJ,EAAMI,IAAMC,UAAU,WAAxC,SACI,2CAGJ,qBAAKD,GAAE,gBAAWJ,EAAMI,IAAMC,UAAU,WAAxC,SACI,2CAGJ,qBAAKD,GAAE,kBAAaJ,EAAMI,IAAMC,UAAU,WAA1C,SACI,kDC0LGwE,G,MA5OsB,WAEjC,MAAgD5E,mBAAsBH,EAAYyD,QAAlF,mBAAQuB,EAAR,KAAyBC,EAAzB,KACA,EAAoD9E,mBAAiB,GAArE,mBAAQ+E,EAAR,KAA2BC,EAA3B,KACA,EAAkDhF,mBAAsBH,EAAYyD,QAApF,mBAAQ2B,EAAR,KAA0BC,EAA1B,KAEA,EAA0ClF,mBAAuB,CAC7DmF,SAAU,KADd,mBAAQC,EAAR,KAAsBC,EAAtB,KAIMhB,EAAgB,SAAClE,GAEnBkF,GAAgB,SAAAC,GAOZ,IALA,IAAMC,EAAyB,CAC3BJ,SAAUG,EAAMH,UAGhB3E,GAAS,EACLiE,EAAI,EAAGA,EAAIc,EAASJ,SAAStE,SAAU4D,EAE3C,GAAGc,EAASJ,SAASV,GAAGtE,KAAOA,EAC/B,CACIK,EAAQiE,EACR,MASR,OALc,IAAXjE,GAEC+E,EAASJ,SAASK,OAAOhF,EAAO,GAG7B+E,MAwCf,OApCAxD,qBAAU,WAEN,IAAM0D,EAAMvD,SAASC,eAAe,OAE9BuD,EAAaxD,SAASC,eAAe,oBAC3CuD,EAAWpD,QAAU,SAACvB,GAElBA,EAAG4E,kBAEH,IAAMC,EAAQH,EAAII,wBAAwBD,MACpCE,EAAOJ,EAAWG,wBAEpBjF,EAAWkF,EAAKC,EAAKD,EAAKF,MAAQ,EAAM,MACzChF,EAAW,IAAMgF,IAEhBhF,GAAaA,EAAW,IAAMgF,GAGlCZ,EAAqBpE,GACrBkE,GAAmB,SAAChB,GAEhB,OAAOA,GAEP,KAAKjE,EAAYyD,OACb,OAAOzD,EAAY0D,KAEvB,KAAK1D,EAAY2D,QACb,OAAOM,EAEX,KAAKjE,EAAY0D,KACb,OAAO1D,EAAY2D,gBAM5B,sBAAKpD,UAAU,MAAf,UACH,wBAAQA,UAAU,OAAlB,SACI,sBAAKA,UAAU,UAAf,UACI,qBACID,GAAG,kBACHC,UAAU,yBACV2C,KAAK,SACLpC,QAAS,WAELuE,EAAoBrF,EAAY0D,OANxC,SASI,mBAAGnD,UAAU,2BAGjB,sBAAMA,UAAU,QAAhB,sBAIA,cAAC,EAAD,CAAQD,GAAG,YAEX,sBAAKC,UAAU,iBAAf,UACI,sBAAKD,GAAG,mBAAmBC,UAAU,mBAArC,UACI,mBAAGA,UAAU,2BACZgF,EAAaD,SAAStE,OAAS,EAC5B,sBAAMT,UAAU,aAAhB,SAA+B,WAE3B,IADA,IAAI4F,EAAQ,EACJvB,EAAI,EAAGA,EAAIW,EAAaD,SAAStE,SAAU4D,EAE/CuB,GAASZ,EAAaD,SAASV,GAAGpC,QAEtC,OAAO2D,EANoB,KAQ7B,QAIV,cAAC,EAAD,CACI7F,GAAG,aACHC,UAAU,gBACV0D,OAAQe,EACRX,KAAMa,EACNrB,aAAc,WAEVoB,EAAmBjF,EAAYyD,SAPvC,SAUI,0BAASlD,UAAU,qBAAnB,UACI,wBAAQA,UAAU,cAAlB,kBAIA,yBAASA,UAAU,eAAnB,SACsC,IAAjCgF,EAAaD,SAAStE,OACnB,qBAAKT,UAAU,aAAf,SACI,yDAOJgF,EAAaD,SAAS7E,KAAI,SAACgB,EAASd,GAEhC,OAAO,cAAC,EAAD,CAAiCL,GAAE,aAAQK,GAASc,QAASA,EAAS+C,cAAeA,GAArF,aAAwB7D,iBAQvD,qBAAKJ,UAAU,oBAAf,SACI,qBAAKA,UAAU,sBAAf,SACI,mBAAGA,UAAU,2BAM7B,cAAC,EAAD,CAASD,GAAG,WAAWyC,UAAW,SAACqD,GAE/BZ,GAAgB,SAAAC,GAOZ,IALA,IAAMC,EAAyB,CAC3BJ,SAAS,YAAMG,EAAMH,WAGrBe,GAAQ,EACJzB,EAAI,EAAGA,EAAIc,EAASJ,SAAStE,SAAU4D,EAExCc,EAASJ,SAASV,GAAGtE,KAAO8F,EAAM9F,KAEjCoF,EAASJ,SAASV,GAAGpC,SAAW4D,EAAM5D,QACtC6D,GAAQ,GAShB,OALIA,GAEAX,EAASJ,SAASgB,KAAKF,GAGpBV,QAIf,cAAC,EAAD,CACIpF,GAAG,qBACHC,UAAU,qBACV0D,OAAQmB,EACRtB,mBAAoB,IACpBD,aAAc,WAEVwB,EAAoBrF,EAAYyD,SAPxC,SAUI,sBAAKlD,UAAU,kBAAf,UACI,wBAAQA,UAAU,aAAlB,SACI,qBACID,GAAG,mBACHC,UAAU,mBACV2C,KAAK,SACLpC,QAAS,WAELuE,EAAoBrF,EAAY2D,UANxC,SASI,mBAAGpD,UAAU,uBAIrB,0BAASA,UAAU,aAAnB,UACI,sBAAMA,UAAU,aAAhB,yBAIA,sBAAMA,UAAU,aAAhB,iBAIA,sBAAMA,UAAU,aAAhB,mBAIA,sBAAMA,UAAU,aAAhB,mBAIA,sBAAMA,UAAU,aAAhB,kCCnOpBgG,SAAgB,cAAC,EAAD,IAASlE,SAASC,eAAe,U","file":"static/js/main.0c541d1c.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nimport \"./modal.scss\";\r\n\r\nexport interface Props\r\n{\r\n    id: string;\r\n    className?: string;\r\n    status: ModalStatus;\r\n    closeAnimationTime?: number;\r\n    top?: number;\r\n    left?: number;\r\n\r\n    closeRequest(): void;\r\n}\r\n\r\nexport enum ModalStatus\r\n{\r\n    Closed = \"closed\",\r\n    Closing = \"closing\",\r\n    Open = \"open\"\r\n}\r\n\r\nconst Modal: React.FunctionComponent<Props> = (props) =>\r\n{\r\n    useEffect(() =>\r\n    {\r\n        const modal = document.getElementById(props.id) as HTMLDivElement;\r\n\r\n        if(modal === null)\r\n        {\r\n            return;\r\n        }\r\n\r\n        const closeModal = (ev: MouseEvent) =>\r\n        {\r\n            if(ev.target !== modal)\r\n            {\r\n                return;\r\n            }\r\n            \r\n            modal.classList.remove(ModalStatus.Closed);\r\n            modal.classList.remove(ModalStatus.Open);\r\n            modal.classList.add(ModalStatus.Closing);\r\n\r\n            setTimeout(\r\n                () =>\r\n                {\r\n                    props.closeRequest();\r\n                },\r\n                props.closeAnimationTime || 0\r\n            );\r\n        };\r\n\r\n        modal.addEventListener(\"click\", closeModal);\r\n\r\n        return () =>\r\n        {\r\n            modal.removeEventListener(\"click\", closeModal);\r\n        };\r\n    });\r\n\r\n    useEffect(() =>\r\n    {\r\n        if(props.status === ModalStatus.Closing)\r\n        {\r\n            const modal = document.getElementById(props.id) as HTMLDivElement;\r\n\r\n            if(modal === null)\r\n            {\r\n                return;\r\n            }\r\n\r\n            modal.classList.remove(ModalStatus.Closed);\r\n            modal.classList.remove(ModalStatus.Open);\r\n            modal.classList.add(ModalStatus.Closing);\r\n\r\n            setTimeout(\r\n                () =>\r\n                {\r\n                    props.closeRequest();\r\n                },\r\n                props.closeAnimationTime || 0\r\n            );\r\n        }\r\n    });\r\n\r\n    let style: React.CSSProperties = {};\r\n    if(props.top !== undefined)\r\n    {\r\n        style.top = `${props.top}px`;\r\n    }\r\n    if(props.left !== undefined)\r\n    {\r\n        style.left = `${props.left}px`;\r\n    }\r\n\r\n    return <div\r\n        id={props.id}\r\n        className={`modal ${props.status} ${props.className}`}\r\n        style={style}\r\n    >\r\n        {props.children}\r\n    </div>;\r\n};\r\n\r\nexport default Modal;","import React, { useState } from \"react\";\r\n\r\nimport \"./gallery.scss\";\r\n\r\nexport interface Props\r\n{\r\n    id: string;\r\n    images: Array<string>;\r\n    thumbnail: Array<string>;\r\n}\r\n\r\nconst Gallery: React.FunctionComponent<Props> = (props) =>\r\n{\r\n    const [ currentPosition, setCurrentPosition ] = useState<number>(0);\r\n\r\n    return <div id={props.id} className=\"gallery-container\">\r\n        <div className=\"image-slider\">\r\n            <div id={`card-container-${props.id}`} className={`card-container pos${currentPosition}`}>\r\n                {\r\n                    props.images.map((element, index) =>\r\n                    {\r\n                        return <div key={`card-${index}`} id={`card-${index}-${props.id}`} className=\"slider-element\">\r\n                            <img src={element} alt=\"\" />\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <div className=\"left-control-container\">\r\n                <div\r\n                    id={`left-${props.id}`}\r\n                    className=\"control\"\r\n                    onClick={() =>\r\n                    {\r\n                        setCurrentPosition((position) =>\r\n                        {\r\n                            if(position === 0)\r\n                            {\r\n                                return position;\r\n                            }\r\n\r\n                            return position - 1;\r\n                        });\r\n                    }}\r\n                >\r\n                    <i className=\"fi fi-rr-angle-small-left\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"right-control-container\">\r\n                <div\r\n                    id={`right-${props.id}`}\r\n                    className=\"control\"\r\n                    onClick={() =>\r\n                    {\r\n                        setCurrentPosition((position) =>\r\n                        {\r\n                            if(position === props.images.length - 1)\r\n                            {\r\n                                return position;\r\n                            }\r\n\r\n                            return position + 1;\r\n                        });\r\n                    }}\r\n                >\r\n                    <i className=\"fi fi-rr-angle-small-right\"></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"thumbnails-container\">\r\n            {\r\n                props.thumbnail.map((element, index) =>\r\n                {\r\n                    return <div\r\n                        key={`thumb-${index}`}\r\n                        id={`thumb-${index}-${props.id}`}\r\n                        className={`thumbnail ${index === currentPosition ? \"active\" : \"\"}`}\r\n                        onClick={async (ev) =>\r\n                        {\r\n                            setCurrentPosition(index);\r\n                        }}\r\n                    >\r\n                        <img src={element} alt=\"\" />\r\n                        <div className=\"white-screen\"></div>\r\n                    </div>;\r\n                })\r\n            }\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nexport default Gallery;","import React from \"react\";\r\n\r\nimport \"./button.scss\";\r\n\r\nexport interface Props\r\n{\r\n    id: string;\r\n    text: string;\r\n    icon?: any;\r\n}\r\n\r\nconst Button: React.FunctionComponent<Props> = (props) =>\r\n{\r\n    return <button id={props.id} className=\"standar-button\">\r\n        {props.icon ? <i className=\"fi fi-rr-shopping-cart\"></i> : null}\r\n        <span className=\"button-content\">\r\n            {props.text}\r\n        </span>\r\n    </button>;\r\n};\r\n\r\nexport default Button;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Gallery from \"../../components/gallery/\";\r\nimport Button from \"../../components/button/\";\r\n\r\nimport \"./product.scss\";\r\n\r\nexport interface Props\r\n{\r\n    id: string;\r\n    addToCart(order: OrderData): void;\r\n}\r\n\r\nconst Product: React.FunctionComponent<Props> = (props) =>\r\n{\r\n    const [ productData, setProductData ] = useState<ProductState>({\r\n        loaded: false,\r\n        product: {\r\n            id: -1,\r\n            title: \"\",\r\n            company: \"\",\r\n            description: \"\",\r\n            prize: 0,\r\n            discount: 0,\r\n            gallery: [],\r\n            thumbnail: []\r\n        }\r\n    });\r\n\r\n    useEffect(() =>\r\n    {\r\n        if(productData.loaded)\r\n        {\r\n            return;\r\n        }\r\n\r\n        setProductData({\r\n            loaded: true,\r\n            product: {\r\n                id: 0,\r\n                title: \"Fall Limited Edition Sneakers\",\r\n                company: \"SNEAKER COMPANY\",\r\n                description: \"These low-profile sneakers are you perfect casual wear companion. Featuring a durable rubber outer sole, they'll withstand everything the weather can offer.\",\r\n                prize: 250,\r\n                discount: 50,\r\n                gallery: [\r\n                    `${process.env.PUBLIC_URL}/img/image-product-1.jpg`,\r\n                    `${process.env.PUBLIC_URL}/img/image-product-2.jpg`,\r\n                    `${process.env.PUBLIC_URL}/img/image-product-3.jpg`,\r\n                    `${process.env.PUBLIC_URL}/img/image-product-4.jpg`\r\n                ],\r\n                thumbnail: [\r\n                    `${process.env.PUBLIC_URL}/img/image-product-1-thumbnail.jpg`,\r\n                    `${process.env.PUBLIC_URL}/img/image-product-2-thumbnail.jpg`,\r\n                    `${process.env.PUBLIC_URL}/img/image-product-3-thumbnail.jpg`,\r\n                    `${process.env.PUBLIC_URL}/img/image-product-4-thumbnail.jpg`\r\n                ]\r\n            }\r\n        });\r\n    },\r\n    [ productData.loaded ]);\r\n\r\n    useEffect(() =>\r\n    {\r\n        const subtract = document.getElementById(`subtract-${props.id}`) as HTMLSpanElement;\r\n        const add = document.getElementById(`add-${props.id}`) as HTMLSpanElement;\r\n        const ammount = document.getElementById(`ammount-${props.id}`) as HTMLSpanElement;\r\n\r\n        subtract.onclick = () =>\r\n        {\r\n            const value = Number(ammount.innerText);\r\n            if(value === 0)\r\n            {\r\n                return;\r\n            }\r\n\r\n            ammount.innerText = String(value - 1);\r\n        };\r\n\r\n        add.onclick = () =>\r\n        {\r\n            ammount.innerText = String(Number(ammount.innerText) + 1);\r\n        };\r\n\r\n        const addButton = document.getElementById(`add-cart-${props.id}`) as HTMLButtonElement;\r\n        addButton.onclick = () =>\r\n        {\r\n            const productCount = Number(ammount.innerText);\r\n\r\n            if(productCount === 0)\r\n            {\r\n                return;\r\n            }\r\n\r\n            ammount.innerText = \"0\";\r\n\r\n            props.addToCart({\r\n                id: productData.product.id,\r\n                title: productData.product.title,\r\n                ammount: productCount,\r\n                finalPrize: productData.product.prize - (productData.product.prize * productData.product.discount / 100),\r\n                thumbnail: productData.product.thumbnail[0],\r\n            });\r\n        };\r\n    });\r\n\r\n    return <div className=\"product\">\r\n        <section className=\"product-body\">\r\n            <section className=\"gallery\">\r\n                <Gallery id=\"product-gallery\" images={productData.product.gallery} thumbnail={productData.product.thumbnail} />\r\n            </section>\r\n\r\n            <section className=\"information\">\r\n                <div className=\"title-container\">\r\n                    <span className=\"company\">\r\n                        {productData.product.company}\r\n                    </span>\r\n\r\n                    <span className=\"title\">\r\n                        {productData.product.title}\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"description\">\r\n                    {productData.product.description}\r\n                </div>\r\n\r\n                <div className=\"prize-container\">\r\n                    <div className=\"final-prize\">\r\n                        <span className=\"prize\">\r\n                            ${(productData.product.prize - (productData.product.prize * productData.product.discount / 100)).toFixed(2)}\r\n                        </span>\r\n\r\n                        <div className=\"discount-container\">\r\n                            <span>\r\n                                {productData.product.discount}%\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <span className=\"actually-prize\">\r\n                        ${productData.product.prize.toFixed(2)}\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"buy-container\">\r\n                    <div className=\"order\">\r\n                        <span id={`subtract-${props.id}`} className=\"subtract\" role=\"button\">\r\n                            -\r\n                        </span>\r\n\r\n                        <span id={`ammount-${props.id}`} className=\"ammount\">\r\n                            0\r\n                        </span>\r\n\r\n                        <span id={`add-${props.id}`} className=\"add\" role=\"button\">\r\n                            +\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"buy-button-container\">\r\n                        <Button id={`add-cart-${props.id}`} text=\"Add to cart\" icon={<i className=\"fi fi-rr-shopping-cart\"></i>} />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </section>\r\n    </div>;\r\n};\r\n\r\nexport interface OrderData\r\n{\r\n    id: number;\r\n    title: string;\r\n    finalPrize: number;\r\n    ammount: number;\r\n    thumbnail: string;\r\n}\r\n\r\ninterface ProductInformation\r\n{\r\n    id: number;\r\n    title: string;\r\n    company: string;\r\n    description: string;\r\n    prize: number;\r\n    discount: number;\r\n    gallery: Array<string>;\r\n    thumbnail: Array<string>;\r\n}\r\n\r\ninterface ProductState\r\n{\r\n    loaded: boolean;\r\n    product: ProductInformation;\r\n}\r\n\r\nexport default Product;","import React, { useEffect } from \"react\";\r\n\r\nimport { OrderData } from \"../../pages/product\";\r\nimport Button from \"../button/\";\r\n\r\nimport \"./cart_product.scss\";\r\n\r\nexport interface Props\r\n{\r\n    id: string;\r\n    product: OrderData;\r\n    removeProduct(id: number): void;\r\n}\r\n\r\nconst CartProduct: React.FunctionComponent<Props> = (props) =>\r\n{\r\n    useEffect(() =>\r\n    {\r\n        const trash = document.getElementById(`trash-${props.id}`) as HTMLSpanElement;\r\n\r\n        trash.onclick = () =>\r\n        {\r\n            props.removeProduct(props.product.id);\r\n        };\r\n    });\r\n\r\n    return <div id={props.id} className=\"cart-product\">\r\n        <section className=\"info\">\r\n            <div className=\"thumbnail-container\">\r\n                <img src={props.product.thumbnail} alt=\"\" />\r\n            </div>\r\n\r\n            <div className=\"text\">\r\n                <span className=\"cart-title\">\r\n                    {props.product.title.substr(0, 22)}...\r\n                </span>\r\n\r\n                <span className=\"prize\">\r\n                    ${props.product.finalPrize.toFixed(2)} x {props.product.ammount} <span className=\"total\">\r\n                        ${(props.product.finalPrize * props.product.ammount).toFixed(2)}\r\n                    </span>\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"erase-container\">\r\n                <span id={`trash-${props.id}`}>\r\n                    <i className=\"fi fi-rr-trash\"></i>\r\n                </span>\r\n            </div>\r\n        </section>\r\n\r\n        <section className=\"cart-button\">\r\n            <Button id=\"checkout-button\" text=\"Checkout\" />\r\n        </section>\r\n    </div>;\r\n};\r\n\r\nexport default CartProduct;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./nav_bar.scss\";\r\n\r\nexport interface Props\r\n{\r\n    id: string;\r\n}\r\n\r\nconst NavBar: React.FunctionComponent<Props> = (props) =>\r\n{\r\n    useEffect(() =>\r\n    {\r\n        const items = [\r\n            document.getElementById(`collections-${props.id}`) as HTMLDivElement,\r\n            document.getElementById(`men-${props.id}`) as HTMLDivElement,\r\n            document.getElementById(`women-${props.id}`) as HTMLDivElement,\r\n            document.getElementById(`about-${props.id}`) as HTMLDivElement,\r\n            document.getElementById(`contact-${props.id}`) as HTMLDivElement,\r\n        ];\r\n\r\n        for(let i = 0; i < items.length; ++i)\r\n        {\r\n            (items[i].firstChild as HTMLSpanElement).onclick = () =>\r\n            {\r\n                for(let j = 0; j < items.length; ++j)\r\n                {\r\n                    if(j === i)\r\n                    {\r\n                        items[j].classList.add(\"active\");\r\n                    }\r\n                    else\r\n                    {\r\n                        items[j].classList.remove(\"active\");\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    },\r\n    [ props.id ]);\r\n\r\n    return <div id={props.id} className=\"nav-bar\">\r\n        <div id={`collections-${props.id}`} className=\"nav-item active\">\r\n            <span>Collections</span>\r\n        </div>\r\n\r\n        <div id={`men-${props.id}`} className=\"nav-item\">\r\n            <span>Men</span>\r\n        </div>\r\n\r\n        <div id={`women-${props.id}`} className=\"nav-item\">\r\n            <span>Women</span>\r\n        </div>\r\n\r\n        <div id={`about-${props.id}`} className=\"nav-item\">\r\n            <span>About</span>\r\n        </div>\r\n\r\n        <div id={`contact-${props.id}`} className=\"nav-item\">\r\n            <span>Contact</span>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nexport default NavBar;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Product, { OrderData } from \"../pages/product/\";\r\nimport Modal, { ModalStatus } from \"../components/modal/\";\r\nimport CartProduct from \"../components/cart_product/\";\r\nimport NavBar from \"./components/nav_bar/\";\r\n\r\nimport \"./app.scss\";\r\n\r\nconst App: React.FunctionComponent = () =>\r\n{\r\n    const [ cartModalStatus, setCartModalStatus ] = useState<ModalStatus>(ModalStatus.Closed);\r\n    const [ cartModalPosition, setCartModalPosition ] = useState<number>(0);\r\n    const [ navigationStatus, setNavigationStatus ] = useState<ModalStatus>(ModalStatus.Closed);\r\n\r\n    const [ shoppingCart, setShoppingCart ] = useState<ShoppingCart>({\r\n        products: []\r\n    });\r\n\r\n    const removeProduct = (id: number) =>\r\n    {\r\n        setShoppingCart(state =>\r\n        {\r\n            const newState: ShoppingCart = {\r\n                products: state.products\r\n            };\r\n\r\n            let index = -1;\r\n            for(let i = 0; i < newState.products.length; ++i)\r\n            {\r\n                if(newState.products[i].id === id)\r\n                {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if(index !== -1)\r\n            {\r\n                newState.products.splice(index, 1);\r\n            }\r\n\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    useEffect(() =>\r\n    {\r\n        const app = document.getElementById(\"app\") as HTMLDivElement;\r\n\r\n        const cartButton = document.getElementById(\"open-cart-button\") as HTMLDivElement;\r\n        cartButton.onclick = (ev) =>\r\n        {\r\n            ev.stopPropagation();\r\n\r\n            const width = app.getBoundingClientRect().width;\r\n            const rect = cartButton.getBoundingClientRect();\r\n\r\n            let position = rect.x + (rect.width / 2) - (375 / 2);\r\n            if(position + 375 > width)\r\n            {\r\n                position -= (position + 375 - width);\r\n            }\r\n            \r\n            setCartModalPosition(position);\r\n            setCartModalStatus((status) =>\r\n            {\r\n                switch(status)\r\n                {\r\n                case ModalStatus.Closed:\r\n                    return ModalStatus.Open;\r\n\r\n                case ModalStatus.Closing:\r\n                    return status;\r\n                    \r\n                case ModalStatus.Open:\r\n                    return ModalStatus.Closing;\r\n                }\r\n            });\r\n        };\r\n    });\r\n\r\n    return <div className=\"app\">\r\n        <header className=\"main\">\r\n            <div className=\"content\">\r\n                <div\r\n                    id=\"open-navigation\"\r\n                    className=\"navigation item-button\"\r\n                    role=\"button\"\r\n                    onClick={() =>\r\n                    {\r\n                        setNavigationStatus(ModalStatus.Open);\r\n                    }}\r\n                >\r\n                    <i className=\"fi fi-rr-menu-burger\"></i>\r\n                </div>\r\n\r\n                <span className=\"title\">\r\n                    sneakers\r\n                </span>\r\n\r\n                <NavBar id=\"nav-bar\" />\r\n\r\n                <div className=\"cart-container\">\r\n                    <div id=\"open-cart-button\" className=\"cart item-button\">\r\n                        <i className=\"fi fi-rr-shopping-cart\"></i>\r\n                        {shoppingCart.products.length > 0 ?\r\n                            <span className=\"cart-count\">{(() => {\r\n                                let count = 0;\r\n                                for(let i = 0; i < shoppingCart.products.length; ++i)\r\n                                {\r\n                                    count += shoppingCart.products[i].ammount;\r\n                                }\r\n                                return count;\r\n                            })()}</span>\r\n                            : null\r\n                        }\r\n                    </div>\r\n\r\n                    <Modal\r\n                        id=\"cart-modal\"\r\n                        className=\"shopping-cart\"\r\n                        status={cartModalStatus}\r\n                        left={cartModalPosition}\r\n                        closeRequest={() =>\r\n                        {\r\n                            setCartModalStatus(ModalStatus.Closed);\r\n                        }}\r\n                    >\r\n                        <section className=\"shopping-cart-body\">\r\n                            <header className=\"cart-header\">\r\n                                Cart\r\n                            </header>\r\n\r\n                            <section className=\"cart-content\">\r\n                                {shoppingCart.products.length === 0 ?\r\n                                    <div className=\"cart-empty\">\r\n                                        <span>\r\n                                            Your cart is empty.\r\n                                        </span>\r\n                                    </div>\r\n                                    \r\n                                    :\r\n                                \r\n                                    shoppingCart.products.map((product, index) =>\r\n                                    {\r\n                                        return <CartProduct key={`sp-${index}`} id={`sp-${index}`} product={product} removeProduct={removeProduct} />\r\n                                    })\r\n                                }\r\n                            </section>\r\n                        </section>\r\n                    </Modal>\r\n                </div>\r\n\r\n                <div className=\"profile-container\">\r\n                    <div className=\"profile item-button\">\r\n                        <i className=\"fi fi-rr-user\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n\r\n        <Product id=\"sneakers\" addToCart={(order: OrderData) =>\r\n        {\r\n            setShoppingCart(state =>\r\n            {\r\n                const newState: ShoppingCart = {\r\n                    products: [ ...state.products ]\r\n                };\r\n\r\n                let found = false;\r\n                for(let i = 0; i < newState.products.length; ++i)\r\n                {\r\n                    if(newState.products[i].id === order.id)\r\n                    {\r\n                        newState.products[i].ammount += order.ammount;\r\n                        found = true;\r\n                    }\r\n                }\r\n\r\n                if(!found)\r\n                {\r\n                    newState.products.push(order);\r\n                }\r\n\r\n                return newState;\r\n            });\r\n        }} />\r\n\r\n        <Modal\r\n            id=\"navigation-sidebar\"\r\n            className=\"navigation-sidebar\"\r\n            status={navigationStatus}\r\n            closeAnimationTime={250}\r\n            closeRequest={() =>\r\n            {\r\n                setNavigationStatus(ModalStatus.Closed);\r\n            }}\r\n        >\r\n            <div className=\"navigation-body\">\r\n                <header className=\"navigation\">\r\n                    <div\r\n                        id=\"close-navigation\"\r\n                        className=\"close-navigation\"\r\n                        role=\"button\"\r\n                        onClick={() =>\r\n                        {\r\n                            setNavigationStatus(ModalStatus.Closing);\r\n                        }}\r\n                    >\r\n                        <i className=\"fi fi-rr-cross\"></i>\r\n                    </div>\r\n                </header>\r\n\r\n                <section className=\"navigation\">\r\n                    <span className=\"modal-link\">\r\n                        Collections\r\n                    </span>\r\n\r\n                    <span className=\"modal-link\">\r\n                        Men\r\n                    </span>\r\n\r\n                    <span className=\"modal-link\">\r\n                        Women\r\n                    </span>\r\n\r\n                    <span className=\"modal-link\">\r\n                        About\r\n                    </span>\r\n\r\n                    <span className=\"modal-link\">\r\n                        Contact\r\n                    </span>\r\n                </section>\r\n            </div>\r\n        </Modal>\r\n    </div>;\r\n};\r\n\r\ninterface ShoppingCart\r\n{\r\n    products: Array<OrderData>;\r\n}\r\n\r\nexport default App;","import * as ReactDom from \"react-dom\";\r\n\r\nimport App from \"./app/\";\r\n\r\nReactDom.render(<App />, document.getElementById(\"app\"));"],"sourceRoot":""}